###################################################
# SnapRAID-Daily Config
###################################################
# This file contains all of the input paramaters
# for the main SnapRAID-Daily bash script. 
# See the manual entry for the config file with:
# $ man snapraid-daily.conf

###################################################
# Config Parameters
###################################################
# Snapraid Config File Path. Leave unchanged if
# not using a non-standard config file path. Comment
# out to assume /etc/snapraid.conf
snapraid_config_file_path="/etc/snapraid.conf"

###################################################
# Email Notification Parameters
###################################################
# For detailed instructions on setting up a muttrc config
# in order to send email notifications with mutt, see here:
# https://github.com/zoot101/snapraid-daily/tree/main/docs/muttrc-examples
#
# Omitting or commenting out either of these will
# disable email functionality. One can then use the
# notification hook to use an alternative form of
# notification if desired.

# MuttRC File for Emails
#muttrc_path="/path/to/muttrc/file"

# Email Address to Send Notification Emails to
#email_address="receive-notifications-here@example.com"

###################################################
# Sync Parameters
###################################################
# Deletion Threshold, the Script will Exit if this number
# is exceeded. To get the script to proceed, one can
# use the -o, --override-thresholds option. To disable
# permanently and sync every time regardless of the number
# of deletions, set to zero. If omitted the default
# assumed is 100.
deletion_threshold=100

# Moved Threshold, the Script will Exit if this number
# is exceeded. To get the script to proceed, one can
# use the -o, --override-thresholds option. To disable
# permanently and sync every time regardless of the number
# of moves, set to zero. Comment out to assume the
# default of 100.
moved_threshold=100

# Updated Threshold, the Script will Exit if this number
# is exceeded. To get the script to proceed, one can
# use the -o, --override-thresholds option. To disable
# permanently and sync every time regardless of the number
# of updated files, set to zero. Comment out to assume the
# default of 100.
updated_threshold=100

# By default SnapRAID is invoked with the "-h" option to
# calculate a preliminary hash on the data during sync. 
# Uncomment and set to no to disable. On by default
#sync_pre_hash="yes"

###################################################
# Scrub Parameters
###################################################
# Scrub Percentage to Scrub
# Should be a number between 0 and 100. The script will throw
# an error out otherwise. Comment out to use the default
# of 8%.
scrub_percent=8

# Age of Data in days to Scrub. Should be a positive number. The
# script will throw an error otherwise. Comment out to
# use the default of 21 days.
scrub_age=21

###################################################
# Extra Options (All Disabled by Default)
###################################################
# Disable emails and the custom notification hook on
# successful runs, error emails/notifications are unaffected
# and still sent as normal. Uncomment and set to yes to use.
# Emails and calls to the notification hooks are always done
# by default, unless this option is used.
#disable_emails_on_success="no"

# Force Sync on Zero File Size (NOT Recommended)
# If a file is found to have zero size that previously
# didn't force a sync. Uncomment and set to "yes" to
# use. NOTE: NOT Recommended
#force_zero="no"

# Force Sync on Empty (NOT Recommended)
# If one or more of the disks are found to be empty,
# force a sync. Uncomment and set to "yes" to use.
# NOTE: NOT Recommended
#force_empty="no"

# Force Sync on UUID Change (NOT Recommended)
# If the UUID of one or more of the disks is found to
# change, force a sync. Uncomment and set to "yes" to
# use. NOTE: NOT Recommended
#force_uuid="no"

###################################################
# Start & End Hooks (Optional)
###################################################
# Path to custom hook scripts that are called throughout a run.
# Must be executable. Comment out if not using.
#
# Start-Hooks: Called after initial checks have completed. Called
# with a "start" argument. Example:
# $ /path/to/start/hook start
# The main script will exit with an error if the start hook returns
# an error (non-zero) code.
#
# End-Hooks: After the script has finished all tasks
# or if the script exits with an error. Called with an
# "end" argument. Example:
# $ /path/to/end/hook end
# Unlike the start hook, the main script does not end with an error
# if this hook reports an error and will continue to end.
#
# The use of the arguments "start" and "end" allow the same hook script
# to be used for both functions. If any variables are required for
# either hook script, they
# can be specifed below with with the use of "export"
#
# Note that these do not have to be bash scripts per se, they can
# be anything that can be ran from the command line. They don't have
# to use the "start" or "end" arguments. They also can be totally seperate
# scripts.
#
# See the SnapRAID-DAILY-Hooks Repository here for some hooks that can
# be used to expand functionality along with instructions on how to set
# them up
# https://github.com/zoot101/snapraid-daily-hooks
#
# Up to 5 are supported. To use them specify start_hook1/end_hook1 to
# start_hook5/end_hook5 below depending on how many you want to use.
# See the sample config in the docs folder here:
# /usr/share/doc/snapraid-daily/examples/snapraid-daily.conf (or on github)
# https://github.com/zoot101/snapraid-daily/blob/main/docs/examples/snapraid-daily.conf
#
# Use the services hook from the SnapRAID-DAILY-Hooks package here:
# https://github.com/zoot101/snapraid-daily-hooks and have it stop
# and later restart smbd (Samba), sonarr, radarr, lidarr, readarr and bazarr
start_hook1="/usr/bin/snapraid-daily-service-hook"
end_hook1="/usr/bin/snapraid-daily-service-hook"
export service1="smbd"
export service2="sonarr"
export service3="radarr"
export service4="lidarr"
export service5="readarr"
export service6="bazarr"

###################################################
# Notification Hook (Optional)
###################################################
# Path to custom notification hooks if one wishes to use
# an alternative form of notification than standard emails, or
# in addition to the standard email functionality. Up to 5
# are supported.
#
# The hook script is called like so:
# /path/to/hook "Email-Subject" "Email-Body" "Email-Attachment"
#
# The attachment is only included if an error was encountered.
# Leave commented out if not using.
# 
# See the SnapRAID-DAILY-Hooks repository here for some notification
# hooks and instructions on how to set them up.
# https://github.com/zoot101/snapraid-daily-hooks
#
# To use them specify the variables notification_hook1 to
# notification_hook5 depending on how many you want to use,
# (start at 1). See the sample config in the docs folder here:
# /usr/share/doc/snapraid-daily/examples/snapraid-daily.conf (or on github)
# https://github.com/zoot101/snapraid-daily/blob/main/docs/examples/snapraid-daily.conf
#
# Use Apprise Hook and Healthchecks.io hook from SnapRAID-DAILY-Hooks
# package here: https://github.com/zoot101/snapraid-daily-hooks
notification_hook1="/usr/bin/snapraid-daily-apprise-hook"
export apprise_url1="ntfys://channel_name_here"
export apprise_url2="tgram://bot-id/chat-id"
export apprise_url3="mailto://username:password@gmail.com?to=email-destination@example.org"
notification_hook2="/usr/bin/snapraid-daily-healthchecks-hook"
export healthchecks_sync_url="https://hc-ping.com/123...456...789"
export healthchecks_scrub_url="https://hc-ping.comf/12a3...456...789a"
export healthchecks_url="https://hc-ping.com/abc...def...ghi"

###################################################
# Hook Script Variables 
###################################################
# If any of the hook scripts require variables to be passed
# into them this can be done here. This is more elegant
# than having seperate config files for hook scripts etc.
# (Make sure not to forget the export)
# export var1="whatever"
# export var2="variable-here"
# etc.



